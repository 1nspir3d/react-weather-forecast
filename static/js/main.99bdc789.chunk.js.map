{"version":3,"sources":["currentDay.js","nextDays.js","index.js"],"names":["CurrentDay","props","date","Date","weather","dt","toString","split","className","city","alt","src","icon","temp","feels_like","clouds","humidity","wind_speed","NextDays","thisWeather","id","morn","day","eve","night","App","success","position","setState","lon","coords","longitude","lat","latitude","weatherKey","fetch","state","then","response","json","data","name","fail","error","alert","message","event","preventDefault","document","getElementById","value","this","geo","navigator","geolocation","getCurrentPosition","type","placeholder","pattern","onClick","findCity","bind","current","daily","React","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.99bdc789.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction CurrentDay(props) {\r\n    let date = (new Date(props.weather.dt * 1000)).toString().split(' ');\r\n    return(\r\n        <div className=\"current\">\r\n            <div className=\"day current__info\">\r\n                <span>{`${date[0]} ${date[1]} ${date[2]}`}</span>\r\n                <span className=\"location\">City: {props.city} <img alt=\"'Weather\" src={`https://openweathermap.org/img/wn/${props.weather.weather[0].icon}@2x.png`}></img></span>\r\n                <span className=\"temp__current\">{`Temperature: ${props.weather.temp}\\u00B0C`}</span>\r\n                <span>{`Feels like: ${props.weather.feels_like}\\u00B0C`}</span>\r\n                <span>Cloudiness: {props.weather.clouds} %</span>\r\n                <span>Humidity: {props.weather.humidity} %</span>\r\n                <span>{`Wind speed: ${props.weather.wind_speed} metre/sec`}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CurrentDay;","import React from 'react';\r\n\r\nfunction NextDays(props) {\r\n    const thisWeather = props.weather[props.id]\r\n    let date = (new Date(thisWeather.dt * 1000)).toString().split(' ');\r\n    return(\r\n        <div className=\"day future__info\">\r\n            <span className=\"date\">{`${date[0]} ${date[1]} ${date[2]}`}</span>\r\n            <span className=\"location\">City: {props.city} <img alt=\"'Weather\" src={`https://openweathermap.org/img/wn/${thisWeather.weather[0].icon}@2x.png`}></img></span>\r\n            <span className=\"temp\">\r\n                Temperature\r\n                <ul className=\"temp__data\">\r\n                    <li>Morning {thisWeather.temp.morn}{'\\u00B0C'}</li>\r\n                    <li>Day {thisWeather.temp.day}{'\\u00B0C'}</li>\r\n                    <li>Evening {thisWeather.temp.eve}{'\\u00B0C'}</li>\r\n                    <li>Night {thisWeather.temp.night}{'\\u00B0C'}</li>\r\n                </ul>\r\n                Feels Like\r\n                <ul className=\"temp__feels\">\r\n                    <li>{thisWeather.feels_like.morn}{'\\u00B0C'}</li>\r\n                    <li>{thisWeather.feels_like.day}{'\\u00B0C'}</li>\r\n                    <li>{thisWeather.feels_like.eve}{'\\u00B0C'}</li>\r\n                    <li>{thisWeather.feels_like.night}{'\\u00B0C'}</li>\r\n                </ul>\r\n            </span>\r\n            <span>Cloudiness {thisWeather.clouds} %</span>\r\n            <span>Humidity {thisWeather.humidity} %</span>\r\n            <span>{`Wind speed: ${thisWeather.wind_speed} metre/sec`}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NextDays;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport CurrentDay from './currentDay.js';\r\nimport NextDays from './nextDays.js'\r\nimport './index.css';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: null,\r\n            lon: null,\r\n            lat: null,\r\n            city: null,\r\n        }\r\n    }\r\n\r\n    success = (position) => {\r\n        this.setState({lon: position.coords.longitude, lat: position.coords.latitude})\r\n        const weatherKey = 'a913b85241698a00b1014abe62a5ca0e';\r\n        // const locationKey = '74b2d16131a57f25ad6a62156047b305';\r\n        fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${this.state.lat}&lon=${this.state.lon}&exclude=hourly,minutely&appid=${weatherKey}&units=metric`)\r\n        .then((response) => {return response.json()})\r\n        .then((data) => {\r\n            this.setState({data: data})\r\n        })\r\n\r\n        fetch(`https://api.openweathermap.org/geo/1.0/reverse?lat=${this.state.lat}&lon=${this.state.lon}&limit=1&appid=${weatherKey}`)\r\n        .then((response) => {return response.json()})\r\n        .then((data) => {\r\n            this.setState({city: data[0].name})\r\n        })\r\n    }\r\n\r\n    fail = (error) => {\r\n        this.setState({lon: 26.251617, lat: 50.619900})\r\n        const weatherKey = 'a913b85241698a00b1014abe62a5ca0e';\r\n        fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${this.state.lat}&lon=${this.state.lon}&exclude=hourly,minutely&appid=${weatherKey}&units=metric`)\r\n        .then((response) => {return response.json()})\r\n        .then((data) => {\r\n            this.setState({data: data})\r\n        })\r\n\r\n        fetch(`https://api.openweathermap.org/geo/1.0/reverse?lat=${this.state.lat}&lon=${this.state.lon}&limit=1&appid=${weatherKey}`)\r\n        .then((response) => {return response.json()})\r\n        .then((data) => {\r\n            this.setState({city: data[0].name})\r\n        })\r\n            alert('Currently we can not get your geolocation due to: ' + error.message)\r\n    }\r\n\r\n    async findCity (event) {\r\n        event.preventDefault();\r\n        const weatherKey = 'a913b85241698a00b1014abe62a5ca0e';\r\n        // const locationKey = '74b2d16131a57f25ad6a62156047b305';\r\n        const city = document.getElementById('search').value;\r\n        document.getElementById('search').value = '';\r\n\r\n        await fetch(`https://api.openweathermap.org/geo/1.0/direct?q=${city}&limit=1&appid=${weatherKey}`)\r\n        .then((response) => {return response.json()})\r\n        .then((data) => {\r\n           try {\r\n            this.setState({lon: data[0].lon, lat: data[0].lat, city: city});\r\n           } catch (error) {\r\n               this.setState({city:'not found'});\r\n               return;\r\n           }\r\n        })\r\n\r\n        await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${this.state.lat}&lon=${this.state.lon}&exclude=hourly,minutely&appid=${weatherKey}&units=metric`)\r\n        .then((response) => {return response.json()})\r\n        .then((data) => {\r\n            this.setState({data: data})\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        const geo = navigator.geolocation;\r\n        \r\n        if(!geo) {\r\n            this.fail()\r\n        } else {\r\n            geo.getCurrentPosition(this.success, this.fail)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n    }\r\n\r\n    render() {\r\n        if (this.state.data == null) {\r\n            return (\r\n                <div className=\"loading\">\r\n                    <span>Loading data, please wait</span>\r\n                </div>\r\n            )\r\n        } else {}\r\n        return (\r\n            <div className=\"app\">\r\n                <form className=\"find\">\r\n                    <input id=\"search\" type=\"text\" placeholder=\"Enter location name\" pattern=\"[A-Za-z]\"></input>\r\n                    <button type=\"submit\" onClick={this.findCity.bind(this)}>Search</button>\r\n                </form>\r\n                <CurrentDay weather={this.state.data.current} city={this.state.city}/>\r\n                <div className=\"future\">\r\n                    <NextDays weather={this.state.data.daily} city={this.state.city} id={1}/>\r\n                    <NextDays weather={this.state.data.daily} city={this.state.city} id={2}/>\r\n                    <NextDays weather={this.state.data.daily} city={this.state.city} id={3}/>\r\n                    <NextDays weather={this.state.data.daily} city={this.state.city} id={4}/>\r\n                    <NextDays weather={this.state.data.daily} city={this.state.city} id={5}/>\r\n                    <NextDays weather={this.state.data.daily} city={this.state.city} id={6}/>\r\n                    <NextDays weather={this.state.data.daily} city={this.state.city} id={7}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n//================================================================\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}